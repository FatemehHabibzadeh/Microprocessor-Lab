
AVRASM ver. 2.1.30  D:\work\AVR\the lcd\part2\Debug\List\part2.asm Wed Oct 20 15:53:13 2021

D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1088): warning: Register r4 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1089): warning: Register r5 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1090): warning: Register r6 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1091): warning: Register r7 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1092): warning: Register r8 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1093): warning: Register r9 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1094): warning: Register r10 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1095): warning: Register r11 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1096): warning: Register r13 already defined by the .DEF directive
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1097): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _h=R4
                 	.DEF _h_msb=R5
                 	.DEF _m=R6
                 	.DEF _m_msb=R7
                 	.DEF _s=R8
                 	.DEF _s_msb=R9
                 	.DEF _i=R10
                 	.DEF _i_msb=R11
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 006a 	JMP  _timer2_ovf_isr
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6425
000034 253a
000035 3a64
000036 6425      	.DB  0x25,0x64,0x3A,0x25,0x64,0x3A,0x25,0x64
D:\work\AVR\the lcd\part2\Debug\List\part2.asm(1136): warning: .cseg .db misalignment - padding zero byte
000037 0000      	.DB  0x0
                 _0x2000003:
000038 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000039 0002      	.DW  0x02
00003a 0166      	.DW  __base_y_G100
00003b 0070      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00003c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003d 94f8      	CLI
00003e 27ee      	CLR  R30
00003f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000040 e0f1      	LDI  R31,1
000041 bffb      	OUT  GICR,R31
000042 bfeb      	OUT  GICR,R30
000043 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000044 e08d      	LDI  R24,(14-2)+1
000045 e0a2      	LDI  R26,2
000046 27bb      	CLR  R27
                 __CLEAR_REG:
000047 93ed      	ST   X+,R30
000048 958a      	DEC  R24
000049 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000050 e7e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000051 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000052 9185      	LPM  R24,Z+
000053 9195      	LPM  R25,Z+
000054 9700      	SBIW R24,0
000055 f061      	BREQ __GLOBAL_INI_END
000056 91a5      	LPM  R26,Z+
000057 91b5      	LPM  R27,Z+
000058 9005      	LPM  R0,Z+
000059 9015      	LPM  R1,Z+
00005a 01bf      	MOVW R22,R30
00005b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005c 9005      	LPM  R0,Z+
00005d 920d      	ST   X+,R0
00005e 9701      	SBIW R24,1
00005f f7e1      	BRNE __GLOBAL_INI_LOOP
000060 01fb      	MOVW R30,R22
000061 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000062 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000063 bfed      	OUT  SPL,R30
000064 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000065 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000066 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000067 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000068 940c 009d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*******************************************************
                 ;This program was created by the
                 ;CodeWizardAVR V3.12 Advanced
                 ;Automatic Program Generator
                 ;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project :
                 ;Version :
                 ;Date    : 10/20/2021
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*******************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;
                 ;unsigned char str[6];
                 ;int h, m, s, i;
                 ;
                 ;// Timer2 overflow interrupt service routine
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0022 {
                 
                 	.CSEG
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
00006a 93ea      	ST   -Y,R30
00006b 93fa      	ST   -Y,R31
00006c b7ef      	IN   R30,SREG
00006d 93ea      	ST   -Y,R30
                 ; 0000 0023     TCNT2=0x3D;
00006e e3ed      	LDI  R30,LOW(61)
00006f bde4      	OUT  0x24,R30
                 ; 0000 0024     i++;
000070 01f5      	MOVW R30,R10
000071 9631      	ADIW R30,1
000072 015f      	MOVW R10,R30
                 ; 0000 0025     if(i == 40) s++; i = 0;
000073 e2e8      	LDI  R30,LOW(40)
000074 e0f0      	LDI  R31,HIGH(40)
000075 15ea      	CP   R30,R10
000076 05fb      	CPC  R31,R11
000077 f419      	BRNE _0x3
000078 01f4      	MOVW R30,R8
000079 9631      	ADIW R30,1
00007a 014f      	MOVW R8,R30
                 _0x3:
00007b 24aa      	CLR  R10
00007c 24bb      	CLR  R11
                 ; 0000 0026     if(s == 59) m++; s = 0;
00007d e3eb      	LDI  R30,LOW(59)
00007e e0f0      	LDI  R31,HIGH(59)
00007f 15e8      	CP   R30,R8
000080 05f9      	CPC  R31,R9
000081 f419      	BRNE _0x4
000082 01f3      	MOVW R30,R6
000083 9631      	ADIW R30,1
000084 013f      	MOVW R6,R30
                 _0x4:
000085 2488      	CLR  R8
000086 2499      	CLR  R9
                 ; 0000 0027     if(m == 59) h++; m = 0;
000087 e3eb      	LDI  R30,LOW(59)
000088 e0f0      	LDI  R31,HIGH(59)
000089 15e6      	CP   R30,R6
00008a 05f7      	CPC  R31,R7
00008b f419      	BRNE _0x5
00008c 01f2      	MOVW R30,R4
00008d 9631      	ADIW R30,1
00008e 012f      	MOVW R4,R30
                 _0x5:
00008f 2466      	CLR  R6
000090 2477      	CLR  R7
                 ; 0000 0028     if(h == 24) h = 0;
000091 e1e8      	LDI  R30,LOW(24)
000092 e0f0      	LDI  R31,HIGH(24)
000093 15e4      	CP   R30,R4
000094 05f5      	CPC  R31,R5
000095 f411      	BRNE _0x6
000096 2444      	CLR  R4
000097 2455      	CLR  R5
                 ; 0000 0029 
                 ; 0000 002A }
                 _0x6:
000098 91e9      	LD   R30,Y+
000099 bfef      	OUT  SREG,R30
00009a 91f9      	LD   R31,Y+
00009b 91e9      	LD   R30,Y+
00009c 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 002D {
                 _main:
                 ; .FSTART _main
                 ; 0000 002E // Declare your local variables here
                 ; 0000 002F 
                 ; 0000 0030 // Input/Output Ports initialization
                 ; 0000 0031 // Port A initialization
                 ; 0000 0032 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0033 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
00009d e0e0      	LDI  R30,LOW(0)
00009e bbea      	OUT  0x1A,R30
                 ; 0000 0034 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0035 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00009f bbeb      	OUT  0x1B,R30
                 ; 0000 0036 
                 ; 0000 0037 // Timer/Counter 2 initialization
                 ; 0000 0038 // Clock source: System Clock
                 ; 0000 0039 // Clock value: 7.813 kHz
                 ; 0000 003A // Mode: Normal top=0xFF
                 ; 0000 003B // OC2 output: Disconnected
                 ; 0000 003C // Timer Period: 24.96 ms
                 ; 0000 003D ASSR=0<<AS2;
0000a0 bde2      	OUT  0x22,R30
                 ; 0000 003E TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
0000a1 e0e7      	LDI  R30,LOW(7)
0000a2 bde5      	OUT  0x25,R30
                 ; 0000 003F TCNT2=0x3D;
0000a3 e3ed      	LDI  R30,LOW(61)
0000a4 bde4      	OUT  0x24,R30
                 ; 0000 0040 OCR2=0x00;
0000a5 e0e0      	LDI  R30,LOW(0)
0000a6 bde3      	OUT  0x23,R30
                 ; 0000 0041 
                 ; 0000 0042 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0043 TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000a7 e4e0      	LDI  R30,LOW(64)
0000a8 bfe9      	OUT  0x39,R30
                 ; 0000 0044 
                 ; 0000 0045 
                 ; 0000 0046 lcd_init(16);
0000a9 e1a0      	LDI  R26,LOW(16)
0000aa d082      	RCALL _lcd_init
                 ; 0000 0047 lcd_clear();
0000ab d04d      	RCALL _lcd_clear
                 ; 0000 0048 
                 ; 0000 0049 // Global enable interrupts
                 ; 0000 004A #asm("sei")
0000ac 9478      	sei
                 ; 0000 004B 
                 ; 0000 004C while (1)
                 _0x7:
                 ; 0000 004D       {
                 ; 0000 004E       sprintf(str,"%d:%d:%d",h,m,s);
0000ad e6e0      	LDI  R30,LOW(_str)
0000ae e0f1      	LDI  R31,HIGH(_str)
0000af 93fa      	ST   -Y,R31
0000b0 93ea      	ST   -Y,R30
                +
0000b1 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000b2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000b3 93fa      	ST   -Y,R31
0000b4 93ea      	ST   -Y,R30
0000b5 01f2      	MOVW R30,R4
0000b6 940e 031d 	CALL SUBOPT_0x0
0000b8 01f3      	MOVW R30,R6
0000b9 940e 031d 	CALL SUBOPT_0x0
0000bb 01f4      	MOVW R30,R8
0000bc 940e 031d 	CALL SUBOPT_0x0
0000be e08c      	LDI  R24,12
0000bf 940e 02d0 	CALL _sprintf
0000c1 9660      	ADIW R28,16
                 ; 0000 004F       lcd_clear();
0000c2 d036      	RCALL _lcd_clear
                 ; 0000 0050       lcd_puts(str);
0000c3 e6a0      	LDI  R26,LOW(_str)
0000c4 e0b1      	LDI  R27,HIGH(_str)
0000c5 d056      	RCALL _lcd_puts
                 ; 0000 0051       delay_ms(10);
0000c6 e0aa      	LDI  R26,LOW(10)
0000c7 e0b0      	LDI  R27,0
0000c8 940e 035c 	CALL _delay_ms
                 ; 0000 0052 
                 ; 0000 0053       }
0000ca cfe2      	RJMP _0x7
                 ; 0000 0054 }
                 _0xA:
0000cb cfff      	RJMP _0xA
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000cc 93aa      	ST   -Y,R26
0000cd b3eb      	IN   R30,0x1B
0000ce 70ef      	ANDI R30,LOW(0xF)
0000cf 2fae      	MOV  R26,R30
0000d0 81e8      	LD   R30,Y
0000d1 7fe0      	ANDI R30,LOW(0xF0)
0000d2 2bea      	OR   R30,R26
0000d3 bbeb      	OUT  0x1B,R30
                +
0000d4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000d5 958a     +DEC R24
0000d6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000d7 9ada      	SBI  0x1B,2
                +
0000d8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000d9 958a     +DEC R24
0000da f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000db 98da      	CBI  0x1B,2
                +
0000dc e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000dd 958a     +DEC R24
0000de f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000df c07a      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000e0 93aa      	ST   -Y,R26
0000e1 81a8      	LD   R26,Y
0000e2 dfe9      	RCALL __lcd_write_nibble_G100
0000e3 81e8          ld    r30,y
0000e4 95e2          swap  r30
0000e5 83e8          st    y,r30
0000e6 81a8      	LD   R26,Y
0000e7 dfe4      	RCALL __lcd_write_nibble_G100
                +
0000e8 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000e9 958a     +DEC R24
0000ea f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000eb c06e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000ec 93aa      	ST   -Y,R26
0000ed 81e8      	LD   R30,Y
0000ee e0f0      	LDI  R31,0
0000ef 59ea      	SUBI R30,LOW(-__base_y_G100)
0000f0 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000f1 81e0      	LD   R30,Z
0000f2 81a9      	LDD  R26,Y+1
0000f3 0fae      	ADD  R26,R30
0000f4 dfeb      	RCALL __lcd_write_data
0000f5 80d9      	LDD  R13,Y+1
0000f6 80c8      	LDD  R12,Y+0
0000f7 9622      	ADIW R28,2
0000f8 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000f9 e0a2      	LDI  R26,LOW(2)
0000fa 940e 0322 	CALL SUBOPT_0x1
0000fc e0ac      	LDI  R26,LOW(12)
0000fd dfe2      	RCALL __lcd_write_data
0000fe e0a1      	LDI  R26,LOW(1)
0000ff 940e 0322 	CALL SUBOPT_0x1
000101 e0e0      	LDI  R30,LOW(0)
000102 2ece      	MOV  R12,R30
000103 2ede      	MOV  R13,R30
000104 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000105 93aa      	ST   -Y,R26
000106 81a8      	LD   R26,Y
000107 30aa      	CPI  R26,LOW(0xA)
000108 f021      	BREQ _0x2000005
000109 91e0 016a 	LDS  R30,__lcd_maxx
00010b 16de      	CP   R13,R30
00010c f048      	BRLO _0x2000004
                 _0x2000005:
00010d e0e0      	LDI  R30,LOW(0)
00010e 93ea      	ST   -Y,R30
00010f 94c3      	INC  R12
000110 2dac      	MOV  R26,R12
000111 dfda      	RCALL _lcd_gotoxy
000112 81a8      	LD   R26,Y
000113 30aa      	CPI  R26,LOW(0xA)
000114 f409      	BRNE _0x2000007
000115 c044      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
000116 94d3      	INC  R13
000117 9ad8      	SBI  0x1B,0
000118 81a8      	LD   R26,Y
000119 dfc6      	RCALL __lcd_write_data
00011a 98d8      	CBI  0x1B,0
00011b c03e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00011c 93ba      	ST   -Y,R27
00011d 93aa      	ST   -Y,R26
00011e 931a      	ST   -Y,R17
                 _0x2000008:
00011f 81a9      	LDD  R26,Y+1
000120 81ba      	LDD  R27,Y+1+1
000121 91ed      	LD   R30,X+
000122 83a9      	STD  Y+1,R26
000123 83ba      	STD  Y+1+1,R27
000124 2f1e      	MOV  R17,R30
000125 30e0      	CPI  R30,0
000126 f019      	BREQ _0x200000A
000127 2fa1      	MOV  R26,R17
000128 dfdc      	RCALL _lcd_putchar
000129 cff5      	RJMP _0x2000008
                 _0x200000A:
00012a 8118      	LDD  R17,Y+0
00012b 9623      	ADIW R28,3
00012c 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00012d 93aa      	ST   -Y,R26
00012e b3ea      	IN   R30,0x1A
00012f 6fe0      	ORI  R30,LOW(0xF0)
000130 bbea      	OUT  0x1A,R30
000131 9ad2      	SBI  0x1A,2
000132 9ad0      	SBI  0x1A,0
000133 9ad1      	SBI  0x1A,1
000134 98da      	CBI  0x1B,2
000135 98d8      	CBI  0x1B,0
000136 98d9      	CBI  0x1B,1
000137 81e8      	LD   R30,Y
000138 93e0 016a 	STS  __lcd_maxx,R30
00013a 58e0      	SUBI R30,-LOW(128)
                +
00013b 93e0 0168+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00013d 81e8      	LD   R30,Y
00013e 54e0      	SUBI R30,-LOW(192)
                +
00013f 93e0 0169+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000141 e1a4      	LDI  R26,LOW(20)
000142 e0b0      	LDI  R27,0
000143 940e 035c 	CALL _delay_ms
000145 940e 0328 	CALL SUBOPT_0x2
000147 940e 0328 	CALL SUBOPT_0x2
000149 940e 0328 	CALL SUBOPT_0x2
00014b e2a0      	LDI  R26,LOW(32)
00014c df7f      	RCALL __lcd_write_nibble_G100
                +
00014d ec88     +LDI R24 , LOW ( 200 )
00014e e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00014f 9701     +SBIW R24 , 1
000150 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000151 e2a8      	LDI  R26,LOW(40)
000152 df8d      	RCALL __lcd_write_data
000153 e0a4      	LDI  R26,LOW(4)
000154 df8b      	RCALL __lcd_write_data
000155 e8a5      	LDI  R26,LOW(133)
000156 df89      	RCALL __lcd_write_data
000157 e0a6      	LDI  R26,LOW(6)
000158 df87      	RCALL __lcd_write_data
000159 df9f      	RCALL _lcd_clear
                 _0x2080002:
00015a 9621      	ADIW R28,1
00015b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
00015c 93ba      	ST   -Y,R27
00015d 93aa      	ST   -Y,R26
00015e 931a      	ST   -Y,R17
00015f 930a      	ST   -Y,R16
000160 81aa      	LDD  R26,Y+2
000161 81bb      	LDD  R27,Y+2+1
000162 9612      	ADIW R26,2
000163 940e 0373 	CALL __GETW1P
000165 9730      	SBIW R30,0
000166 f159      	BREQ _0x2020010
000167 81aa      	LDD  R26,Y+2
000168 81bb      	LDD  R27,Y+2+1
000169 9614      	ADIW R26,4
00016a 940e 0373 	CALL __GETW1P
00016c 018f      	MOVW R16,R30
00016d 9730      	SBIW R30,0
00016e f061      	BREQ _0x2020012
                +
00016f 3002     +CPI R16 , LOW ( 2 )
000170 e0e0     +LDI R30 , HIGH ( 2 )
000171 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000172 f098      	BRLO _0x2020013
000173 01f8      	MOVW R30,R16
000174 9731      	SBIW R30,1
000175 018f      	MOVW R16,R30
                +
000176 81aa     +LDD R26 , Y + 2
000177 81bb     +LDD R27 , Y + 2 + 1
000178 9614     +ADIW R26 , 4
000179 93ed     +ST X + , R30
00017a 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
00017b 81aa      	LDD  R26,Y+2
00017c 81bb      	LDD  R27,Y+2+1
00017d 9612      	ADIW R26,2
00017e 91ed      	LD   R30,X+
00017f 91fd      	LD   R31,X+
000180 9631      	ADIW R30,1
000181 93fe      	ST   -X,R31
000182 93ee      	ST   -X,R30
000183 9731      	SBIW R30,1
000184 81ac      	LDD  R26,Y+4
000185 83a0      	STD  Z+0,R26
                 _0x2020013:
000186 81aa      	LDD  R26,Y+2
000187 81bb      	LDD  R27,Y+2+1
000188 940e 0373 	CALL __GETW1P
00018a 23ff      	TST  R31
00018b f02a      	BRMI _0x2020014
00018c 91ed      	LD   R30,X+
00018d 91fd      	LD   R31,X+
00018e 9631      	ADIW R30,1
00018f 93fe      	ST   -X,R31
000190 93ee      	ST   -X,R30
                 _0x2020014:
000191 c006      	RJMP _0x2020015
                 _0x2020010:
000192 81aa      	LDD  R26,Y+2
000193 81bb      	LDD  R27,Y+2+1
000194 efef      	LDI  R30,LOW(65535)
000195 efff      	LDI  R31,HIGH(65535)
000196 93ed      	ST   X+,R30
000197 93fc      	ST   X,R31
                 _0x2020015:
000198 8119      	LDD  R17,Y+1
000199 8108      	LDD  R16,Y+0
00019a 9625      	ADIW R28,5
00019b 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
00019c 93ba      	ST   -Y,R27
00019d 93aa      	ST   -Y,R26
00019e 9726      	SBIW R28,6
00019f 940e 0380 	CALL __SAVELOCR6
0001a1 e010      	LDI  R17,0
0001a2 85ac      	LDD  R26,Y+12
0001a3 85bd      	LDD  R27,Y+12+1
0001a4 e0e0      	LDI  R30,LOW(0)
0001a5 e0f0      	LDI  R31,HIGH(0)
0001a6 93ed      	ST   X+,R30
0001a7 93fc      	ST   X,R31
                 _0x2020016:
0001a8 89ea      	LDD  R30,Y+18
0001a9 89fb      	LDD  R31,Y+18+1
0001aa 9631      	ADIW R30,1
0001ab 8bea      	STD  Y+18,R30
0001ac 8bfb      	STD  Y+18+1,R31
0001ad 9731      	SBIW R30,1
0001ae 91e4      	LPM  R30,Z
0001af 2f2e      	MOV  R18,R30
0001b0 30e0      	CPI  R30,0
0001b1 f409      	BRNE PC+2
0001b2 c115      	RJMP _0x2020018
0001b3 2fe1      	MOV  R30,R17
0001b4 30e0      	CPI  R30,0
0001b5 f439      	BRNE _0x202001C
0001b6 3225      	CPI  R18,37
0001b7 f411      	BRNE _0x202001D
0001b8 e011      	LDI  R17,LOW(1)
0001b9 c002      	RJMP _0x202001E
                 _0x202001D:
0001ba 940e 0330 	CALL SUBOPT_0x3
                 _0x202001E:
0001bc c10a      	RJMP _0x202001B
                 _0x202001C:
0001bd 30e1      	CPI  R30,LOW(0x1)
0001be f4a9      	BRNE _0x202001F
0001bf 3225      	CPI  R18,37
0001c0 f419      	BRNE _0x2020020
0001c1 940e 0330 	CALL SUBOPT_0x3
0001c3 c102      	RJMP _0x20200CC
                 _0x2020020:
0001c4 e012      	LDI  R17,LOW(2)
0001c5 e040      	LDI  R20,LOW(0)
0001c6 e000      	LDI  R16,LOW(0)
0001c7 322d      	CPI  R18,45
0001c8 f411      	BRNE _0x2020021
0001c9 e001      	LDI  R16,LOW(1)
0001ca c0fc      	RJMP _0x202001B
                 _0x2020021:
0001cb 322b      	CPI  R18,43
0001cc f411      	BRNE _0x2020022
0001cd e24b      	LDI  R20,LOW(43)
0001ce c0f8      	RJMP _0x202001B
                 _0x2020022:
0001cf 3220      	CPI  R18,32
0001d0 f411      	BRNE _0x2020023
0001d1 e240      	LDI  R20,LOW(32)
0001d2 c0f4      	RJMP _0x202001B
                 _0x2020023:
0001d3 c002      	RJMP _0x2020024
                 _0x202001F:
0001d4 30e2      	CPI  R30,LOW(0x2)
0001d5 f439      	BRNE _0x2020025
                 _0x2020024:
0001d6 e050      	LDI  R21,LOW(0)
0001d7 e013      	LDI  R17,LOW(3)
0001d8 3320      	CPI  R18,48
0001d9 f411      	BRNE _0x2020026
0001da 6800      	ORI  R16,LOW(128)
0001db c0eb      	RJMP _0x202001B
                 _0x2020026:
0001dc c003      	RJMP _0x2020027
                 _0x2020025:
0001dd 30e3      	CPI  R30,LOW(0x3)
0001de f009      	BREQ PC+2
0001df c0e7      	RJMP _0x202001B
                 _0x2020027:
0001e0 3320      	CPI  R18,48
0001e1 f010      	BRLO _0x202002A
0001e2 332a      	CPI  R18,58
0001e3 f008      	BRLO _0x202002B
                 _0x202002A:
0001e4 c007      	RJMP _0x2020029
                 _0x202002B:
0001e5 e0aa      	LDI  R26,LOW(10)
0001e6 9f5a      	MUL  R21,R26
0001e7 2d50      	MOV  R21,R0
0001e8 2fe2      	MOV  R30,R18
0001e9 53e0      	SUBI R30,LOW(48)
0001ea 0f5e      	ADD  R21,R30
0001eb c0db      	RJMP _0x202001B
                 _0x2020029:
0001ec 2fe2      	MOV  R30,R18
0001ed 36e3      	CPI  R30,LOW(0x63)
0001ee f449      	BRNE _0x202002F
0001ef 940e 0337 	CALL SUBOPT_0x4
0001f1 89e8      	LDD  R30,Y+16
0001f2 89f9      	LDD  R31,Y+16+1
0001f3 81a4      	LDD  R26,Z+4
0001f4 93aa      	ST   -Y,R26
0001f5 940e 033d 	CALL SUBOPT_0x5
0001f7 c0ce      	RJMP _0x2020030
                 _0x202002F:
0001f8 37e3      	CPI  R30,LOW(0x73)
0001f9 f441      	BRNE _0x2020032
0001fa 940e 0337 	CALL SUBOPT_0x4
0001fc 940e 0343 	CALL SUBOPT_0x6
0001fe 940e 0304 	CALL _strlen
000200 2f1e      	MOV  R17,R30
000201 c00a      	RJMP _0x2020033
                 _0x2020032:
000202 37e0      	CPI  R30,LOW(0x70)
000203 f461      	BRNE _0x2020035
000204 940e 0337 	CALL SUBOPT_0x4
000206 940e 0343 	CALL SUBOPT_0x6
000208 940e 0310 	CALL _strlenf
00020a 2f1e      	MOV  R17,R30
00020b 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00020c 6002      	ORI  R16,LOW(2)
00020d 770f      	ANDI R16,LOW(127)
00020e e030      	LDI  R19,LOW(0)
00020f c034      	RJMP _0x2020036
                 _0x2020035:
000210 36e4      	CPI  R30,LOW(0x64)
000211 f011      	BREQ _0x2020039
000212 36e9      	CPI  R30,LOW(0x69)
000213 f411      	BRNE _0x202003A
                 _0x2020039:
000214 6004      	ORI  R16,LOW(4)
000215 c002      	RJMP _0x202003B
                 _0x202003A:
000216 37e5      	CPI  R30,LOW(0x75)
000217 f431      	BRNE _0x202003C
                 _0x202003B:
000218 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000219 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00021a 83ee      	STD  Y+6,R30
00021b 83ff      	STD  Y+6+1,R31
00021c e015      	LDI  R17,LOW(5)
00021d c00c      	RJMP _0x202003D
                 _0x202003C:
00021e 35e8      	CPI  R30,LOW(0x58)
00021f f411      	BRNE _0x202003F
000220 6008      	ORI  R16,LOW(8)
000221 c003      	RJMP _0x2020040
                 _0x202003F:
000222 37e8      	CPI  R30,LOW(0x78)
000223 f009      	BREQ PC+2
000224 c0a1      	RJMP _0x2020071
                 _0x2020040:
000225 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000226 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000227 83ee      	STD  Y+6,R30
000228 83ff      	STD  Y+6+1,R31
000229 e014      	LDI  R17,LOW(4)
                 _0x202003D:
00022a ff02      	SBRS R16,2
00022b c014      	RJMP _0x2020042
00022c 940e 0337 	CALL SUBOPT_0x4
00022e 940e 034d 	CALL SUBOPT_0x7
000230 85ab      	LDD  R26,Y+11
000231 23aa      	TST  R26
000232 f43a      	BRPL _0x2020043
000233 85ea      	LDD  R30,Y+10
000234 85fb      	LDD  R31,Y+10+1
000235 940e 036a 	CALL __ANEGW1
000237 87ea      	STD  Y+10,R30
000238 87fb      	STD  Y+10+1,R31
000239 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00023a 3040      	CPI  R20,0
00023b f011      	BREQ _0x2020044
00023c 5f1f      	SUBI R17,-LOW(1)
00023d c001      	RJMP _0x2020045
                 _0x2020044:
00023e 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00023f c004      	RJMP _0x2020046
                 _0x2020042:
000240 940e 0337 	CALL SUBOPT_0x4
000242 940e 034d 	CALL SUBOPT_0x7
                 _0x2020046:
                 _0x2020036:
000244 fd00      	SBRC R16,0
000245 c011      	RJMP _0x2020047
                 _0x2020048:
000246 1715      	CP   R17,R21
000247 f478      	BRSH _0x202004A
000248 ff07      	SBRS R16,7
000249 c008      	RJMP _0x202004B
00024a ff02      	SBRS R16,2
00024b c004      	RJMP _0x202004C
00024c 7f0b      	ANDI R16,LOW(251)
00024d 2f24      	MOV  R18,R20
00024e 5011      	SUBI R17,LOW(1)
00024f c001      	RJMP _0x202004D
                 _0x202004C:
000250 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000251 c001      	RJMP _0x202004E
                 _0x202004B:
000252 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000253 940e 0330 	CALL SUBOPT_0x3
000255 5051      	SUBI R21,LOW(1)
000256 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000257 2f31      	MOV  R19,R17
000258 ff01      	SBRS R16,1
000259 c017      	RJMP _0x202004F
                 _0x2020050:
00025a 3030      	CPI  R19,0
00025b f0a1      	BREQ _0x2020052
00025c ff03      	SBRS R16,3
00025d c006      	RJMP _0x2020053
00025e 81ee      	LDD  R30,Y+6
00025f 81ff      	LDD  R31,Y+6+1
000260 9125      	LPM  R18,Z+
000261 83ee      	STD  Y+6,R30
000262 83ff      	STD  Y+6+1,R31
000263 c005      	RJMP _0x2020054
                 _0x2020053:
000264 81ae      	LDD  R26,Y+6
000265 81bf      	LDD  R27,Y+6+1
000266 912d      	LD   R18,X+
000267 83ae      	STD  Y+6,R26
000268 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000269 940e 0330 	CALL SUBOPT_0x3
00026b 3050      	CPI  R21,0
00026c f009      	BREQ _0x2020055
00026d 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00026e 5031      	SUBI R19,LOW(1)
00026f cfea      	RJMP _0x2020050
                 _0x2020052:
000270 c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000271 e320      	LDI  R18,LOW(48)
000272 81ee      	LDD  R30,Y+6
000273 81ff      	LDD  R31,Y+6+1
000274 940e 0377 	CALL __GETW1PF
000276 87e8      	STD  Y+8,R30
000277 87f9      	STD  Y+8+1,R31
000278 81ee      	LDD  R30,Y+6
000279 81ff      	LDD  R31,Y+6+1
00027a 9632      	ADIW R30,2
00027b 83ee      	STD  Y+6,R30
00027c 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00027d 85e8      	LDD  R30,Y+8
00027e 85f9      	LDD  R31,Y+8+1
00027f 85aa      	LDD  R26,Y+10
000280 85bb      	LDD  R27,Y+10+1
000281 17ae      	CP   R26,R30
000282 07bf      	CPC  R27,R31
000283 f050      	BRLO _0x202005C
000284 5f2f      	SUBI R18,-LOW(1)
000285 85a8      	LDD  R26,Y+8
000286 85b9      	LDD  R27,Y+8+1
000287 85ea      	LDD  R30,Y+10
000288 85fb      	LDD  R31,Y+10+1
000289 1bea      	SUB  R30,R26
00028a 0bfb      	SBC  R31,R27
00028b 87ea      	STD  Y+10,R30
00028c 87fb      	STD  Y+10+1,R31
00028d cfef      	RJMP _0x202005A
                 _0x202005C:
00028e 332a      	CPI  R18,58
00028f f028      	BRLO _0x202005D
000290 ff03      	SBRS R16,3
000291 c002      	RJMP _0x202005E
000292 5f29      	SUBI R18,-LOW(7)
000293 c001      	RJMP _0x202005F
                 _0x202005E:
000294 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000295 fd04      	SBRC R16,4
000296 c01a      	RJMP _0x2020061
000297 3321      	CPI  R18,49
000298 f420      	BRSH _0x2020063
000299 85a8      	LDD  R26,Y+8
00029a 85b9      	LDD  R27,Y+8+1
00029b 9711      	SBIW R26,1
00029c f409      	BRNE _0x2020062
                 _0x2020063:
00029d c009      	RJMP _0x20200CD
                 _0x2020062:
00029e 1753      	CP   R21,R19
00029f f010      	BRLO _0x2020067
0002a0 ff00      	SBRS R16,0
0002a1 c001      	RJMP _0x2020068
                 _0x2020067:
0002a2 c013      	RJMP _0x2020066
                 _0x2020068:
0002a3 e220      	LDI  R18,LOW(32)
0002a4 ff07      	SBRS R16,7
0002a5 c00b      	RJMP _0x2020069
0002a6 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002a7 6100      	ORI  R16,LOW(16)
0002a8 ff02      	SBRS R16,2
0002a9 c007      	RJMP _0x202006A
0002aa 7f0b      	ANDI R16,LOW(251)
0002ab 934a      	ST   -Y,R20
0002ac 940e 033d 	CALL SUBOPT_0x5
0002ae 3050      	CPI  R21,0
0002af f009      	BREQ _0x202006B
0002b0 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002b1 940e 0330 	CALL SUBOPT_0x3
0002b3 3050      	CPI  R21,0
0002b4 f009      	BREQ _0x202006C
0002b5 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002b6 5031      	SUBI R19,LOW(1)
0002b7 85a8      	LDD  R26,Y+8
0002b8 85b9      	LDD  R27,Y+8+1
0002b9 9712      	SBIW R26,2
0002ba f008      	BRLO _0x2020059
0002bb cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002bc ff00      	SBRS R16,0
0002bd c008      	RJMP _0x202006D
                 _0x202006E:
0002be 3050      	CPI  R21,0
0002bf f031      	BREQ _0x2020070
0002c0 5051      	SUBI R21,LOW(1)
0002c1 e2e0      	LDI  R30,LOW(32)
0002c2 93ea      	ST   -Y,R30
0002c3 940e 033d 	CALL SUBOPT_0x5
0002c5 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002c6 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002c7 cee0      	RJMP _0x2020016
                 _0x2020018:
0002c8 85ac      	LDD  R26,Y+12
0002c9 85bd      	LDD  R27,Y+12+1
0002ca 940e 0373 	CALL __GETW1P
0002cc 940e 0387 	CALL __LOADLOCR6
0002ce 9664      	ADIW R28,20
0002cf 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002d0 92ff      	PUSH R15
0002d1 2ef8      	MOV  R15,R24
0002d2 9726      	SBIW R28,6
0002d3 940e 0382 	CALL __SAVELOCR4
0002d5 940e 0355 	CALL SUBOPT_0x8
0002d7 9730      	SBIW R30,0
0002d8 f419      	BRNE _0x2020072
0002d9 efef      	LDI  R30,LOW(65535)
0002da efff      	LDI  R31,HIGH(65535)
0002db c023      	RJMP _0x2080001
                 _0x2020072:
0002dc 01de      	MOVW R26,R28
0002dd 9616      	ADIW R26,6
0002de 940e 0366 	CALL __ADDW2R15
0002e0 018d      	MOVW R16,R26
0002e1 940e 0355 	CALL SUBOPT_0x8
0002e3 83ee      	STD  Y+6,R30
0002e4 83ff      	STD  Y+6+1,R31
0002e5 e0e0      	LDI  R30,LOW(0)
0002e6 87e8      	STD  Y+8,R30
0002e7 87e9      	STD  Y+8+1,R30
0002e8 01de      	MOVW R26,R28
0002e9 961a      	ADIW R26,10
0002ea 940e 0366 	CALL __ADDW2R15
0002ec 940e 0373 	CALL __GETW1P
0002ee 93fa      	ST   -Y,R31
0002ef 93ea      	ST   -Y,R30
0002f0 931a      	ST   -Y,R17
0002f1 930a      	ST   -Y,R16
0002f2 e5ec      	LDI  R30,LOW(_put_buff_G101)
0002f3 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002f4 93fa      	ST   -Y,R31
0002f5 93ea      	ST   -Y,R30
0002f6 01de      	MOVW R26,R28
0002f7 961a      	ADIW R26,10
0002f8 dea3      	RCALL __print_G101
0002f9 019f      	MOVW R18,R30
0002fa 81ae      	LDD  R26,Y+6
0002fb 81bf      	LDD  R27,Y+6+1
0002fc e0e0      	LDI  R30,LOW(0)
0002fd 93ec      	ST   X,R30
0002fe 01f9      	MOVW R30,R18
                 _0x2080001:
0002ff 940e 0389 	CALL __LOADLOCR4
000301 962a      	ADIW R28,10
000302 90ff      	POP  R15
000303 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000304 93ba      	ST   -Y,R27
000305 93aa      	ST   -Y,R26
000306 91a9          ld   r26,y+
000307 91b9          ld   r27,y+
000308 27ee          clr  r30
000309 27ff          clr  r31
                 strlen0:
00030a 916d          ld   r22,x+
00030b 2366          tst  r22
00030c f011          breq strlen1
00030d 9631          adiw r30,1
00030e cffb          rjmp strlen0
                 strlen1:
00030f 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000310 93ba      	ST   -Y,R27
000311 93aa      	ST   -Y,R26
000312 27aa          clr  r26
000313 27bb          clr  r27
000314 91e9          ld   r30,y+
000315 91f9          ld   r31,y+
                 strlenf0:
000316 9005      	lpm  r0,z+
000317 2000          tst  r0
000318 f011          breq strlenf1
000319 9611          adiw r26,1
00031a cffb          rjmp strlenf0
                 strlenf1:
00031b 01fd          movw r30,r26
00031c 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _str:
000160           	.BYTE 0x6
                 __base_y_G100:
000166           	.BYTE 0x4
                 __lcd_maxx:
00016a           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00031d 940e 036e 	CALL __CWD1
00031f 940e 037b 	CALL __PUTPARD1
000321 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000322 940e 00e0 	CALL __lcd_write_data
000324 e0a3      	LDI  R26,LOW(3)
000325 e0b0      	LDI  R27,0
000326 940c 035c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
000328 e3a0      	LDI  R26,LOW(48)
000329 940e 00cc 	CALL __lcd_write_nibble_G100
                +
00032b ec88     +LDI R24 , LOW ( 200 )
00032c e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00032d 9701     +SBIW R24 , 1
00032e f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00032f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3:
000330 932a      	ST   -Y,R18
000331 85ad      	LDD  R26,Y+13
000332 85be      	LDD  R27,Y+13+1
000333 85ef      	LDD  R30,Y+15
000334 89f8      	LDD  R31,Y+15+1
000335 9509      	ICALL
000336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000337 89e8      	LDD  R30,Y+16
000338 89f9      	LDD  R31,Y+16+1
000339 9734      	SBIW R30,4
00033a 8be8      	STD  Y+16,R30
00033b 8bf9      	STD  Y+16+1,R31
00033c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
00033d 85ad      	LDD  R26,Y+13
00033e 85be      	LDD  R27,Y+13+1
00033f 85ef      	LDD  R30,Y+15
000340 89f8      	LDD  R31,Y+15+1
000341 9509      	ICALL
000342 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000343 89a8      	LDD  R26,Y+16
000344 89b9      	LDD  R27,Y+16+1
000345 9614      	ADIW R26,4
000346 940e 0373 	CALL __GETW1P
000348 83ee      	STD  Y+6,R30
000349 83ff      	STD  Y+6+1,R31
00034a 81ae      	LDD  R26,Y+6
00034b 81bf      	LDD  R27,Y+6+1
00034c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
00034d 89a8      	LDD  R26,Y+16
00034e 89b9      	LDD  R27,Y+16+1
00034f 9614      	ADIW R26,4
000350 940e 0373 	CALL __GETW1P
000352 87ea      	STD  Y+10,R30
000353 87fb      	STD  Y+10+1,R31
000354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000355 01de      	MOVW R26,R28
000356 961c      	ADIW R26,12
000357 940e 0366 	CALL __ADDW2R15
000359 940e 0373 	CALL __GETW1P
00035b 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00035c 9610      	adiw r26,0
00035d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00035e ed80     +LDI R24 , LOW ( 0x7D0 )
00035f e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000360 9701     +SBIW R24 , 1
000361 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000362 95a8      	wdr
000363 9711      	sbiw r26,1
000364 f7c9      	brne __delay_ms0
                 __delay_ms1:
000365 9508      	ret
                 
                 __ADDW2R15:
000366 2400      	CLR  R0
000367 0daf      	ADD  R26,R15
000368 1db0      	ADC  R27,R0
000369 9508      	RET
                 
                 __ANEGW1:
00036a 95f1      	NEG  R31
00036b 95e1      	NEG  R30
00036c 40f0      	SBCI R31,0
00036d 9508      	RET
                 
                 __CWD1:
00036e 2f6f      	MOV  R22,R31
00036f 0f66      	ADD  R22,R22
000370 0b66      	SBC  R22,R22
000371 2f76      	MOV  R23,R22
000372 9508      	RET
                 
                 __GETW1P:
000373 91ed      	LD   R30,X+
000374 91fc      	LD   R31,X
000375 9711      	SBIW R26,1
000376 9508      	RET
                 
                 __GETW1PF:
000377 9005      	LPM  R0,Z+
000378 91f4      	LPM  R31,Z
000379 2de0      	MOV  R30,R0
00037a 9508      	RET
                 
                 __PUTPARD1:
00037b 937a      	ST   -Y,R23
00037c 936a      	ST   -Y,R22
00037d 93fa      	ST   -Y,R31
00037e 93ea      	ST   -Y,R30
00037f 9508      	RET
                 
                 __SAVELOCR6:
000380 935a      	ST   -Y,R21
                 __SAVELOCR5:
000381 934a      	ST   -Y,R20
                 __SAVELOCR4:
000382 933a      	ST   -Y,R19
                 __SAVELOCR3:
000383 932a      	ST   -Y,R18
                 __SAVELOCR2:
000384 931a      	ST   -Y,R17
000385 930a      	ST   -Y,R16
000386 9508      	RET
                 
                 __LOADLOCR6:
000387 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000388 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000389 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00038a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00038b 8119      	LDD  R17,Y+1
00038c 8108      	LD   R16,Y
00038d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   0 r4 :   5 r5 :   2 r6 :   5 r7 :   2 
r8 :   5 r9 :   2 r10:   4 r11:   2 r12:   4 r13:   4 r14:   0 r15:   4 
r16:  34 r17:  24 r18:  29 r19:   8 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  23 r25:   5 r26:  97 r27:  38 r28:  14 r29:   1 r30: 190 r31:  68 
x  :  23 y  : 170 z  :  15 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   4 
adiw  :  28 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  34 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  53 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  15 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   8 cpc   :   6 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   3 inc   :   2 jmp   :  23 ld    :  28 ldd   :  76 ldi   :  99 
lds   :   1 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  19 movw  :  25 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  17 pop   :   1 push  :   1 rcall :  18 ret   :  26 
reti  :   1 rjmp  :  59 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  61 std   :  31 sts   :   3 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 55 out of 116 (47.4%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00071c   1782     38   1820   16384  11.1%
[.dseg] 0x000060 0x00016b      0     11     11    1024   1.1%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 11 warnings
